1. 통신의 정의
- 통신 : 컴퓨터 간 정보를 교환, 공유
	- 통신의 준비물 : 컴퓨터, 통신 규약 (통신 규약 == 프로토콜)
	- 통신 조건 : 송신자와 수신자의 프로토콜이 일치해야 한다

2. protocol 
- 통신 규약
- 안드로이드와 IOS는 서로 에어드랍을 할 수 없다 == 프로토콜이 맞지 않기 때문
- 에어드랍, 블루투스, LAN ...
- protocol의 종류와 형태는 굉장히 다양

3. network
- 통신으로 연결된 하나의 컴퓨터 집합
- 컴퓨터와 컴퓨터끼리 랜선을 꼽으면 통신할 수 있다 -> "컴퓨터와 컴퓨터 자체"를 네트워크라고 함
- 네트워크는 다른 큰 네트워크의 부분집합이 될 수 있음
	- 가천대학교라는 네트워크 안에 IT대학이라는 네트워크
- 가장 큰 네트워크 : 인터넷 
- 네트워크마다 그마다의 프로토콜이 존재해야 한다

4. TCP/IP 집합
- 인터넷에서 사용하기 위한 프로토콜
- 종류가 많다
- 각각의 서비스마다 프로토콜이 다르다 (카카오톡에서의 프로토콜, 네이버에서의 프로토콜...)

5. IP address
- 컴퓨터 고유의 주소
- 송신자, 수신자의 IP주소를 알아야 다른 컴퓨터랑 통신이 가능하다
- IP주소를 쉽게 하자 -> www.~~~~.com (DNS)
- IPv4 vs IPv6 
	- IPv4 : "A. B. C. D"형태. 각 cell당 0~255. 경우의 수는 255^4 == 4228250625
	- IPv6 : "A. B. C. D. E. F. G. H"형태. 각 cell당 16진수. 컴퓨터가 늘어나다 보니깐 더욱 많은 IP 주소가 필요함 (IP주소는 고유)
	- 아직도 IPv4를 사용하는 이유 : 쉽게 변경하기 어려움 (변경하면 H/W나 S/W의 엄청난 교체가 필요함)

6. DNS (domain name service)
- IP주소를 쉽게 하자 -> www.~~~~.com
- IP주소를 그 컴퓨터, 서버를 대표하는 이름을 지어주는 서비스

7. HTML (hypertext markup lang) : hyperlink를 지원하는 markup이 가능한 웹 문서
- HTML : 웹 문서. 웹의 틀을 이룸
- 웹브라우저 : HTML을 해석하는 도구
- hyper~~ : 웹문서에서 다른 웹문서나, 이미지나, 비디오를 바로 연결하는 방식 + 다른 페이지로 이동할 수 있는 조직도 (hypertext, hyperlink, hypermedia...)
- markup language : 글자의 내용 + 속성(서식) 지정 가능 (latex, html, xml)

8. HTTP (hypertext transfer protocol)
- HTML을 전송하는 프로토콜 
- http://www.~~~~~.com 

9. client-server 관계
- 서비스를 제공하는 측과 서비스를 제공받는 측이 고정되어 있는 관계
- 서버 : 서비스를 제공하는 측 
- 클라이언트 : 서비스를 제공받는 측
- 서버와 클라이언트는 역할이 고정되어 있다
	- 그래야 효율적
	- 클라이언트는 컴퓨팅 성능이 낮아도 된다
	- 서버는 컴퓨팅 성능이 높아도 된다
- 서버 프로그램과 클라이언트 프로그램
	- 클라이언트 프로그램 : 카카오톡, 게임 ... (웬만하면 다운로드 안해도 됨 - OS에서 제공)
	- 서버 프로그램 (라이브러리) : docker, linux kernel, Apachi, express, spring boot ... (설치해야함)
	
10. P2P 관계 (Peer 2 Peer)
- client-server 관계하고는 다르게 서버와 클라이언트의 역할이 고정되어 있지 않다 (컴퓨팅 연산이 공평해야 함)
- 언제든지 유저가ㄴ 서버와 클라이언트의 역할을 선택하여 서비스를 사용할 수 있다 (동시도 가능)
	- 4shared에서 A가 음악을 올렸다. -> B가 음악을 다운받고 이번에는 비디오를 올렸다 -> C가 다운로드받고 ...
	- B는 여기서 client와 server의 역할을 동시에 한다
- 토렌트, 4Shared, 에어드랍, 메일 ...

